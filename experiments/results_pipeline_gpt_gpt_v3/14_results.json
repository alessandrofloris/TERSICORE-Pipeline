{
    "llava_prompt": "\"\nFrom the given image, extract structured information for each visible human.\n\nYou must assign a value for every attribute, for every person \u2014 no exceptions.\nIf the information is unclear or ambiguous, you must still make a best-guess estimate based on visual cues.\n\nDo not skip individuals. Do not respond with fallback messages such as \"not enough information\" or \"uncertain.\"\n\n---\n\nNumber of Persons: Count all visible humans in the image. Exclude animals, statues, or mannequins.\n\nFor each individual, assign values for the following attributes. Choose the most likely category for each, even if you are not fully certain:\n\n- **Bodily Posture**: \n  - Upright (standing, leaning, squatting, bending)\n  - Seated (sitting on a bench, ground, ledge, stairs, wall, etc.)\n  - Recumbent (lying down, lounging)\n\n- **Activity Level**: \n  - Sedentary (still or minimal movement: resting, talking, reading, using a device)\n  - Moderate (walking or slow, casual movement)\n  - Vigorous (running, exercising, high motion)\n\n- **Social Configuration**: \n  - Solitary (alone, not visibly interacting)\n  - Dyadic (interacting with one other person)\n  - Group (engaged in a group of three or more)\n\n- **Age Range** (best estimate based on body proportions, hair, clothing, etc.):\n  - Child\n  - Adult\n  - Senior\n\n- **Sex** (best estimate based on overall appearance, hairstyle, clothing, etc.):\n  - Male\n  - Female\n\n---\n\n**Output Format**: Return your answer as a single tuple:\n(number of individuals, [(id, bodily posture, activity level, social configuration, age range, sex), ...])\n\n**Schema Reminder**:\nEach person must be described by a tuple of exactly six fields in the following order:\n(id, bodily posture, activity level, social configuration, age range, sex)\n\n**Examples**:\n- If the image contains 1 person:\nOutput \u2192 (1, [(1, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Female')])\n\n- If the image contains 3 people:\nOutput \u2192 (3, [(1, 'Upright, 'Moderate', 'Group', 'Adult', 'Male'), (2, 'Upright', 'Moderate', 'Group', 'Adult', 'Female'), (3, 'Seated', 'Sedentary', 'Solitary', 'Senior', 'Female')])\n\nDo not change the order or swap attributes between fields.\n\nGuidelines:\n- Each individual must have a unique sequential ID starting from 1.\n- Do not include explanations, comments, or line breaks. Return only the tuple.\n- Do not use any placeholders like \"Not enough information\" or \"Unknown\".\n- Do not use escape characters.\n\nThis task is for academic research in public spaces. All individuals are anonymous and non-identifiable.\n",
    "gemini_prompt": "You are given a list of tuples. Each tuple has the following format:\n\n(total_people, [\n  (id, posture, activity_level, social_context, age_group, gender),\n  ...\n])\n\nEach tuple comes from a separate group of people in the same image. Your task is to:\n\n- Merge all people into a single list.\n- Renumber the IDs starting from 1.\n- Return only the final merged tuple in this format:\n\n(total_people, [\n  (1, ..., ..., ..., ..., ...),\n  ...\n])\n\nDo not explain your answer or include any code. Just output the final merged tuple.\n",
    "output_raw": "[\"(1, [(1, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Male')])\", \"(6, [(1, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Female'), (2, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (3, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (4, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (5, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (6, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Male')])\", \"(2, [(1, 'Seated', 'Sedentary', 'Dyadic', 'Adult', 'Male'), (2, 'Seated', 'Sedentary', 'Dyadic', 'Adult', 'Female')])\", \"(43, [(1, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (2, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (3, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (4, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (5, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (6, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (7, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (8, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (9, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (10, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (11, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (12, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (13, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (14, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (15, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (16, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (17, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (18, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (19, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (20, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (21, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (22, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (23, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (24, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (25, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (26, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (27, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (28, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (29, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (30, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (31, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (32, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (33, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (34, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (35, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (36, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (37, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (38, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (39, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (40, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (41, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (42, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (43, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female')])\"]",
    "output": "(52, [(1, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Male'), (2, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Female'), (3, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (4, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (5, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (6, 'Seated', 'Sedentary', 'Group', 'Adult', 'Male'), (7, 'Seated', 'Sedentary', 'Solitary', 'Adult', 'Male'), (8, 'Seated', 'Sedentary', 'Dyadic', 'Adult', 'Male'), (9, 'Seated', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (10, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (11, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (12, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (13, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (14, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (15, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (16, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (17, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (18, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (19, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (20, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (21, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (22, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (23, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (24, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (25, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (26, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (27, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (28, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (29, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (30, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (31, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (32, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (33, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (34, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (35, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (36, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (37, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (38, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (39, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (40, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (41, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (42, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (43, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (44, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (45, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (46, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (47, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (48, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (49, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (50, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (51, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female'), (52, 'Upright', 'Sedentary', 'Dyadic', 'Adult', 'Female')])"
}